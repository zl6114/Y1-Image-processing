define int sim_time
define int p0p
define int p1p
define int p2p
define int p3p
define int acbase
define int scont
define int debugio



scont = _RDWORD(9*4)
acbase = _RDWORD(8*4)
debugio = _RDWORD(10*4)
_WDWORD(debugio, 0)
_WDWORD(debugio+4,0)
_WDWORD(debugio+8,0)
_WDWORD(debugio+12,0)

p0p = _RDWORD(scont+4)
p1p = _RDWORD(scont+8)
p2p = _RDWORD(scont+12)
p3p = _RDWORD(scont+16)
sim_time = _RDWORD(scont)


LA (PORT & 0x1) >> 0
LA (PORT & 0x80) >> 7
LA (PORT & 0x40000) >> 18
LA (PORT & 0x2000000) >> 25

LA (PORT & 0x8000) >> 15
LA (PORT & 0x10000) >> 16





signal void iofreq0(int period, int b) {
  int x;
  x = 0;
  twatch(100);
  while (1) {
    if (PORT & (1<<16)) PORT = PORT ^ (1 << b);
	if ((PORT & (1 << b))	!= 0){
        if (period % 2 == 1) twatch(1);
        if ((PORT & (1<<16))) _WDWORD(debugio, _RDWORD(debugio)+1);        
    }
    twatch (period/2);
  }
}

signal void iofreq1(int period, int b) {
  int x;
  x = 0;
  twatch(100);
  while (1) {
    if (PORT & (1<<16)) PORT = PORT ^ (1 << b);
	if ((PORT & (1 << b))	!= 0){
        if (period % 2 == 1) twatch(1);
        if ((PORT & (1<<16))) _WDWORD(debugio+4, _RDWORD(debugio+4)+1);
    }
    twatch (period/2);
  }
}

signal void iofreq2(int period, int b) {
  int x;
  x = 0;
  twatch(100);
  while (1) {
    if (PORT & (1<<16)) PORT = PORT ^ (1 << b);
	if ((PORT & (1 << b))	!= 0){
        if (period % 2 == 1) twatch(1);
        if ((PORT & (1<<16))) _WDWORD(debugio+8, _RDWORD(debugio+8)+1);        
    }
    twatch (period/2);
  }
}
	   
signal void iofreq3(int period, int b) {
  int x;
  x = 0;
  twatch(100);
  while (1) {
    if (PORT & (1<<16)) PORT = PORT ^ (1 << b);
	if ((PORT & (1 << b))	!= 0){
        if (period % 2 == 1) twatch(1);
        if ((PORT & (1<<16))) _WDWORD(debugio+12, _RDWORD(debugio+12)+1);        
    }
    twatch (period/2);
  }
}

func void print_freq(int b, int cnt, int period, int iocntx)
{
   int err;
   float epercent;
   err = cnt - iocntx;
   printf("Period:%d Port bit:%d\t\tcount:%d\tiocnt:%d\terror:%d\n", period, b, cnt, iocntx, err);
} 

signal void call_int(  int delaytime) {
  printf("Starting new...\n");
  twatch(sim_time + 100);
  PORT &= ~(1<<16);
  twatch(100);
  PORT &= ~(1 << 15);
  printf("Interrupt!\n");
  rwatch(0x7f00);
  print_freq(0, _RDWORD(acbase), p0p, _RDWORD(debugio));
  print_freq(7, _RDWORD(acbase+4), p1p,_RDWORD(debugio+4) );
  print_freq(18, _RDWORD(acbase+8), p2p, _RDWORD(debugio+8));
  print_freq(25, _RDWORD(acbase+12), p3p,_RDWORD(debugio+12));
  _break_ = 1;

}



iofreq0(p0p, 0);
iofreq1(p1p, 7);
iofreq2(p2p, 18);
iofreq3(p3p, 25);




call_int(sim_time);


